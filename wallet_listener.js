// wallet_listener.js ‚Äî NUMNet Token Grant on Payment
const axios = require('axios');
const fs = require('fs');
const config = require('./config.json');

async function checkWallets() {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ TRX —á–µ—Ä–µ–∑ TronGrid
  const tronUrl = `https://api.trongrid.io/v1/accounts/${config.wallet.trx}/transactions`;
  const tronResponse = await axios.get(tronUrl);
  const trxTxns = tronResponse.data.data;

  trxTxns.forEach(tx => {
    const sender = tx.raw_data.contract[0].parameter.value.owner_address;
    const amount = tx.raw_data.contract[0].parameter.value.amount;
    const chatId = getChatIdFromAddress(sender);
    if (amount >= config.paymentThreshold.trx && !config.granted[chatId]) {
      config.granted[chatId] = 'vasydrop_basic';
      fs.writeFileSync('config.json', JSON.stringify(config, null, 2));
      notifyBot(chatId, '‚úÖ TRX-–ø–ª–∞—Ç—ë–∂ –ø–æ–ª—É—á–µ–Ω. –¢–æ–∫–µ–Ω –≤—ã–¥–∞–Ω!');
    }
  });

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ ETH —á–µ—Ä–µ–∑ Etherscan
  const ethUrl = `https://api.etherscan.io/api?module=account&action=txlist&address=${config.wallet.eth}&sort=desc&apikey=${config.etherscanApiKey}`;
  const ethResponse = await axios.get(ethUrl);
  const ethTxns = ethResponse.data.result;

  ethTxns.forEach(tx => {
    const sender = tx.from;
    const value = parseFloat(tx.value) / 1e18; // ETH –≤ –¥–µ—Å—è—Ç. —Ñ–æ—Ä–º–∞—Ç–µ
    const chatId = getChatIdFromAddress(sender);
    if (value >= config.paymentThreshold.eth && !config.granted[chatId]) {
      config.granted[chatId] = 'vasydrop_basic';
      fs.writeFileSync('config.json', JSON.stringify(config, null, 2));
      notifyBot(chatId, '‚úÖ ETH-–ø–ª–∞—Ç—ë–∂ –ø–æ–ª—É—á–µ–Ω. –¢–æ–∫–µ–Ω –≤—ã–¥–∞–Ω!');
    }
  });
}

// –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–≤—è–∑–∏ –∞–¥—Ä–µ—Å–∞ ‚Üî Chat ID
function getChatIdFromAddress(address) {
  return config.addressMap[address] || null;
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function notifyBot(chatId, message) {
  // –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Telegram API –Ω–∞–ø—Ä—è–º—É—é –∏–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å bot.sendMessage
  console.log(`üîî Chat ${chatId}: ${message}`);
}

// –ó–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥
setInterval(checkWallets, 60000);
